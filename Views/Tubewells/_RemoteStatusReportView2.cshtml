@using System.Data;
@using System.Data.SqlClient;
@using Newtonsoft.Json;
@model IEnumerable<TubewellDataClass>

<link href="~/Metronic/assets/global/plugins/bootstrap/css/bootstrap.min.css" rel="stylesheet" />


<body>
    <div class="portlet-title">
        <div class="row" style="opacity:0.9">
            <div class="portlet-body">
                <div class="widget stacked">
                    <div class="widget-content">
                        <div>
                            <center>
                                <div id="chartContainer1" style="width: 95%; height: 500px"></div>
                            </center>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <hr style="margin-top: 1rem; margin-bottom: 1rem; border: 0; border-top: 1px solid rgba(0, 0, 0, 0.1);" />




    <script type="text/javascript">

        if (typeof jQuery == 'undefined') {
            document.write('<script type="text/javascript" src="../../Metronic/assets/global/scripts/jquery.min.js"></' + 'script> ');
            document.write('<script type = "text/javascript" src = "../../Scripts/jquery-ui.js" ></' + 'script> ');

            document.write('<script type="text/javascript" src="https://canvasjs.com/assets/script/canvasjs.min.js"></' + 'scrip> ');
            document.write('<script type = "text/javascript" src = "../../Metronic/assets/global/plugins/bootstrap/js/bootstrap.min.js"></' + 'script> ');
            //document.getElementById("tubeWellTable").style.width = "90%";
            document.body.style.padding = "20";
        }

    </script>
    <script src="https://cdn.amcharts.com/lib/4/core.js"></script>
    <script src="https://cdn.amcharts.com/lib/4/charts.js"></script>
    <script src="https://cdn.amcharts.com/lib/4/themes/animated.js"></script>

    <script>
        var jsonObj = @Html.Raw(ViewData["AllData"]);
        //jsonObj = JSON.parse(JSON.parse(jsonObj))
        //var jsonObj = JSON.parse(@(ViewData["AllData"]).replace(/(&quot\;)/g, "\""));
        

        am4core.ready(function () {
            am4core.useTheme(am4themes_animated);
            var chart = am4core.create("chartContainer1", am4charts.XYChart);
            chart.paddingRight = 20;
            var dateAxis = chart.xAxes.push(new am4charts.DateAxis());
            dateAxis.baseInterval = {
                "timeUnit": "minute",
                "count": 1
            };
            dateAxis.tooltipDateFormat = " d-MM-yyyy hh:mm:ss a";
            var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());
            valueAxis.tooltip.disabled = true;
            valueAxis.renderer.labels.template.disabled = true;

            for (var j = 0; j < jsonObj.length; j++) {
                if (jsonObj[j].pumpStatus.length === 0) { }
                else
                {
                    var series = chart.series.push(new am4charts.LineSeries());
                    var data = [];
                    //console.log(jsonObj[j].locationName);
                    for (var i = 0; i < jsonObj[j].pumpStatus.length; i++) {
                        var Thedate = jsonObj[j].LogTime[i];
                        var changeDate = moment(Thedate, 'DD/MM/YYYY HH:mm:ss A').format("MM/DD/YYYY HH:mm:ss");
                        var dateObj = new Date((changeDate));
                        var value = jsonObj[j].pumpStatus[i];
                        var location = jsonObj[j].locationName;
                        if (jsonObj[j].pumpStatus[i] == 0) {
                            data.push({ location: location, paramameter: 'Pump Status', date: dateObj, value: value, status: 'OFF' });
                        }
                        else {
                            data.push({ location: location, paramameter: 'Pump Status', date: dateObj, value: value, status: 'ON' });
                        }
                    }
                    series.data = data;
                    series.dataFields.dateX = "date";
                    series.dataFields.valueY = "value";
                    series.dataFields.status = "status";
                    series.dataFields.location = "location";
                    series.tooltipText = "{location} : Pump Status: [bold]{status}[/] ";
                    series.name = jsonObj[j].locationName;
                    series.fillOpacity = 0.3;
                }
            }
            chart.cursor = new am4charts.XYCursor();
            chart.cursor.lineY.opacity = 0;

            chart.legend = new am4charts.Legend();
    });



    </script>
</body>


